@using X.PagedList
@using X.PagedList.Mvc.Common
@using X.PagedList.Mvc.Core
@model X.PagedList.StaticPagedList<ProductListingViewModel>
@{
    ViewData["Title"] = "Products";
}
<h3 class="text-center"><i class="fas fa-gamepad mr-2"></i>Products</h3>
<hr/>
@if (!string.IsNullOrEmpty((string) TempData["Message"]))
{
    <div class="alert alert-danger alert-dismissible" role="alert">
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
        @TempData["Message"]
    </div>
}
<div class="col-md-12">
    <div class="row justify-content-center">
        @await Html.PartialAsync("_ProductsPartialGrid", Model)
        @Html.PagedListPager((IPagedList) ViewBag.OnePageOfProducts, page => Url.Action("Index", new {page}),
            new PagedListRenderOptions
            {
                LiElementClasses = new[] {"page-item"},
                PageClasses = new[] {"page-link"}
            })
    </div>
</div>